---
- hosts: somehost
  gather_facts: true

  vars:
    remote_docker_sock_path: '/var/run/docker.sock'
    local_docker_sock_path: '/tmp/{{ inventory_hostname }}_docker.sock'
    ansible_ssh_extra_args: '-L {{ local_docker_sock_path }}:{{ remote_docker_sock_path }}'

  vars_prompt:
    - name: user_email
      prompt: User email?
      private: false

  tasks:

    - fail: 
        msg: "Remote Docker daemon is down"
      when: remote_docker_sock_path is not exists

    - name: Add remote docker host to inventory
      add_host:
        hostname: django
        ansible_connection: docker
        ansible_docker_extra_args: '-H=unix://{{ local_docker_sock_path }}'
        ansible_host: real_container_name_here
        ansible_python_interpreter: /usr/bin/python3
      
    - name: 'Set password: {{ new_password }}'
      delegate_to: django
      vars:
        new_password: '{{ lookup("password", "/dev/null chars=ascii_letters,digits length=12") }}'
        cmd: >
          from django.contrib.auth.hashers import make_password; 
          from django.contrib.auth import get_user_model; 
          updated = get_user_model().objects.filter(email="{{ user_email }}").update(password=make_password("{{ new_password }}"));
          print(updated)
      command: python manage.py shell -c '{{ cmd }}'
      register: result
    
    - debug:
        msg: 'Updated: {{ result.stdout }}'

    - name: Remove forwarded socket
      local_action: file path='{{ local_docker_sock_path }}' state=absent
...
